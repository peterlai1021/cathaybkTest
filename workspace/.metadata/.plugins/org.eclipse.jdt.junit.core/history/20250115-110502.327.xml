<?xml version="1.0" encoding="UTF-8"?><testrun name="CurrencyServiceTest" project="demo" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="com.cathaybk.demo.service.CurrencyServiceTest" time="0.0" displayname="CurrencyServiceTest" uniqueid="[engine:junit-jupiter]/[class:com.cathaybk.demo.service.CurrencyServiceTest]">
    <testcase name="testGetAllCurrencies" classname="com.cathaybk.demo.service.CurrencyServiceTest" time="0.0" displayname="testGetAllCurrencies()" uniqueid="[engine:junit-jupiter]/[class:com.cathaybk.demo.service.CurrencyServiceTest]/[method:testGetAllCurrencies()]">
      <error>java.lang.IllegalStateException: Failed to load ApplicationContext&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)&#13;
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)&#13;
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)&#13;
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)&#13;
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:350)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:355)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$7(ClassBasedTestDescriptor.java:350)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)&#13;
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)&#13;
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:349)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$4(ClassBasedTestDescriptor.java:270)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:269)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:259)&#13;
	at java.base/java.util.Optional.orElseGet(Optional.java:362)&#13;
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:258)&#13;
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:101)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:100)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:65)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:111)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:111)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:79)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:84)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:768)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/cathaybkTest/demo/target/test-classes/data.sql]: INSERT INTO currencydb (id, code, symbol, rate, description, rateFloat, name, createDate, updateDate) VALUES ('1', 'USD', '&amp;#36;', '1.00', 'US Dollar', 1.00, '美金', '2025-01-13 10:00:00', '2025-01-13 10:02:00'), ('2', 'EUR', '&amp;euro;', '0.92', 'Euro', 0.92, '歐元', '2025-01-14 12:00:00', '2025-01-13 12:02:00'), ('3', 'GBP', '&amp;pound;', '0.82', 'British Pound Sterling', 0.82, '英鎊', '2025-01-14 13:00:00', '2025-01-13 13:02:00'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "CREATEDATE" not found; SQL statement:
INSERT INTO currencydb (id, code, symbol, rate, description, rateFloat, name, createDate, updateDate) VALUES ('1', 'USD', '&amp;#36;', '1.00', 'US Dollar', 1.00, '美金', '2025-01-13 10:00:00', '2025-01-13 10:02:00'), ('2', 'EUR', '&amp;euro;', '0.92', 'Euro', 0.92, '歐元', '2025-01-14 12:00:00', '2025-01-13 12:02:00'), ('3', 'GBP', '&amp;pound;', '0.82', 'British Pound Sterling', 0.82, '英鎊', '2025-01-14 13:00:00', '2025-01-13 13:02:00') [42122-212]&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)&#13;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)&#13;
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)&#13;
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)&#13;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)&#13;
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)&#13;
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)&#13;
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)&#13;
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)&#13;
	... 70 more&#13;
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/cathaybkTest/demo/target/test-classes/data.sql]: INSERT INTO currencydb (id, code, symbol, rate, description, rateFloat, name, createDate, updateDate) VALUES ('1', 'USD', '&amp;#36;', '1.00', 'US Dollar', 1.00, '美金', '2025-01-13 10:00:00', '2025-01-13 10:02:00'), ('2', 'EUR', '&amp;euro;', '0.92', 'Euro', 0.92, '歐元', '2025-01-14 12:00:00', '2025-01-13 12:02:00'), ('3', 'GBP', '&amp;pound;', '0.82', 'British Pound Sterling', 0.82, '英鎊', '2025-01-14 13:00:00', '2025-01-13 13:02:00'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "CREATEDATE" not found; SQL statement:
INSERT INTO currencydb (id, code, symbol, rate, description, rateFloat, name, createDate, updateDate) VALUES ('1', 'USD', '&amp;#36;', '1.00', 'US Dollar', 1.00, '美金', '2025-01-13 10:00:00', '2025-01-13 10:02:00'), ('2', 'EUR', '&amp;euro;', '0.92', 'Euro', 0.92, '歐元', '2025-01-14 12:00:00', '2025-01-13 12:02:00'), ('3', 'GBP', '&amp;pound;', '0.82', 'British Pound Sterling', 0.82, '英鎊', '2025-01-14 13:00:00', '2025-01-13 13:02:00') [42122-212]&#13;
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)&#13;
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)&#13;
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)&#13;
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)&#13;
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)&#13;
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)&#13;
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)&#13;
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)&#13;
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)&#13;
	... 87 more&#13;
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "CREATEDATE" not found; SQL statement:
INSERT INTO currencydb (id, code, symbol, rate, description, rateFloat, name, createDate, updateDate) VALUES ('1', 'USD', '&amp;#36;', '1.00', 'US Dollar', 1.00, '美金', '2025-01-13 10:00:00', '2025-01-13 10:02:00'), ('2', 'EUR', '&amp;euro;', '0.92', 'Euro', 0.92, '歐元', '2025-01-14 12:00:00', '2025-01-13 12:02:00'), ('3', 'GBP', '&amp;pound;', '0.82', 'British Pound Sterling', 0.82, '英鎊', '2025-01-14 13:00:00', '2025-01-13 13:02:00') [42122-212]&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)&#13;
	at org.h2.message.DbException.get(DbException.java:223)&#13;
	at org.h2.message.DbException.get(DbException.java:199)&#13;
	at org.h2.table.Table.getColumn(Table.java:754)&#13;
	at org.h2.command.Parser.parseColumn(Parser.java:1264)&#13;
	at org.h2.command.Parser.parseColumnList(Parser.java:1249)&#13;
	at org.h2.command.Parser.parseInsert(Parser.java:1650)&#13;
	at org.h2.command.Parser.parsePrepared(Parser.java:814)&#13;
	at org.h2.command.Parser.parse(Parser.java:691)&#13;
	at org.h2.command.Parser.parse(Parser.java:661)&#13;
	at org.h2.command.Parser.prepareCommand(Parser.java:568)&#13;
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)&#13;
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)&#13;
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)&#13;
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)&#13;
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)&#13;
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)&#13;
	... 97 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
