package com.cathaybk.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.cathaybk.demo.model.Currency;
import com.cathaybk.demo.model.CurrencyRepository;

@RestController
public class CurrencyController {

    @Autowired
    private CurrencyRepository currencyRepository;

    @RequestMapping(value = "/currencies/list", method = RequestMethod.POST)
    public List<Currency> getAllCurrencies() {
        return currencyRepository.findAll();
    }
    
    @RequestMapping(value = "/currencies/{id}", method = RequestMethod.POST)
    public List<Currency> getCurrencies(@PathVariable Long id) {
        return currencyRepository.findAll();
    }

    @RequestMapping(value = "/currencies/create", method = RequestMethod.POST)
    public Currency createCurrency(@RequestBody Currency currency) {
        return currencyRepository.save(currency);
    }

    @RequestMapping(value = "/currencies/edit", method = RequestMethod.POST)
    public ResponseEntity<Currency> updateCurrency(@PathVariable Long id, @RequestBody Currency currencyDetails) {
        return currencyRepository.findById(id).map(currency -> {
            currency.setCurrencyCode(currencyDetails.getCurrencyCode());
            currency.setCurrencyName(currencyDetails.getCurrencyName());
            return ResponseEntity.ok(currencyRepository.save(currency));
        }).orElse(ResponseEntity.notFound().build());
    }

    @RequestMapping(value = "/currencies/delete", method = RequestMethod.POST)
    public ResponseEntity<?> deleteCurrency(@PathVariable Long id) {
        return currencyRepository.findById(id).map(currency -> {
            currencyRepository.delete(currency);
            return ResponseEntity.ok().build();
        }).orElse(ResponseEntity.notFound().build());
    }
}