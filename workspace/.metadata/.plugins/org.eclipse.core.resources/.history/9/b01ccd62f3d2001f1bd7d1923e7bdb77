package com.cathaybk.demo.service;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Optional;

import javax.transaction.Transactional;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

import com.cathaybk.demo.model.Currency;
import com.cathaybk.demo.model.CurrencyRepository;

@SpringBootTest
@Transactional
class CurrencyServiceTest {
	
	@Mock
    private CurrencyRepository currencyRepository;
	
	@InjectMocks
    private CurrencyService currencyService;
	
//	@Test
//	public void testGetAllCurrencies() {
//		List<Currency> list = currencyRepository.findAll();
//		System.out.println("111111111111111111111111111111");
//		System.out.println("2222222222222222" + list.get(0).getCode());
//    }

	@Test
	public void testGetCurrenciesById() {
		
//		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//		
		Currency currency = new Currency(1L, "USD","$","1.00","US Dollar","1.0","美金",LocalDateTime.parse("2025-01-13 10:00:00", formatter),LocalDateTime.parse("2025-01-13 10:02:00", formatter));
//		currencyRepository.save(currency);
//		
//		Long id = 1L;
		
		Long id = 1L;
//	    Currency currency = new Currency();
//	    currency.setId(id);
//	    currency.setCode("USD");
//	    currency.setDescription("US Dollar");

//	    when(currencyService.getCurrenciesById(id)).thenReturn(Optional.of(currency));

        when(currencyRepository.findById(id)).thenReturn(Optional.of(currency));

        Optional<Currency> optionalCurrency = currencyRepository.findById(id);

        Currency currencyData = optionalCurrency.get();
        
        assertNotNull(currencyData);
        assertEquals("USD", currencyData.getCode());
        assertEquals("US Dollar", currencyData.getDescription());
		
		
	}

//	@Test
//	public void testCreateCurrency() {
//		fail("Not yet implemented");
//	}
//
//	@Test
//	public void testDeleteCurrencyById() {
//		fail("Not yet implemented");
//	}

}
